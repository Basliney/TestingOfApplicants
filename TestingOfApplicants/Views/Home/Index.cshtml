@using TestingOfApplicants.Models.Tests
@{
    ViewData["Title"] = "Тесты";
    List<TestHeader> list = Model;
    Random rnd = new Random();
    int color = rnd.Next(75, 180); 
    int countRow = list.Count;
    int countRowNew = countRow / 4;
    if (list.Count % 4 != 0) { countRowNew++; }
    bool flag = false;
}

<div class="text-center">
    <h1 class="display-4">Добро пожаловать!</h1>
    <p>Мы рады видеть вас, @ViewBag.ActiveUser.mName.Split()[1], у нас на сайте тестирования. Ниже вы можете найти все доступные тесты для прохождения</p>
    
    <div class="row">
    @{
        for(int i = 0; i < countRowNew; i++)
        {
            <div class = "main-row">
                @{
                    for(int j = i * 4; j < i * 4 + 4; j++)
                    {
                        @if (j >= list.Count) break;
                        <div class="questionsTile" style="background:@GetColor(j); @GetAnimation()">
                            @{
                                string subject;
                                @switch(list[j].Subjectid)
                                {
                                    case 1:
                                        subject = "ИИ";
                                        break;
                                    
                                    case 2:
                                        subject = "Мат. Моделирование";
                                        break;
                                    
                                    case 3:
                                        subject = "ООП";
                                        break;
                                    case 1002:
                                        subject = "WEB";
                                        break;
                                    default:
                                        subject = "";
                                        break;
                                }
                                //var subject =  == null ? "" : list[j+i*countRow / 4].Subjectid.ToString();

                            }
                            <p class="testHeader" style="font-size: 10px; margin-bottom:0px">@subject</p>
                            <h3 class="testHeader">@list[j].Title</h3>
                            <p class="testDescription">@list[j].Description</p>
                            @{
                                if (ViewBag.ActiveUser.Role != 0)
                                {
                                    @Html.RouteLink("Изменить", new {controller = "Editing", action = "Edit", id = list[j].Id})
                                }
                            }
                            <br/>
                            <div class="buttons">
                                @if(flag)
                                {
                                    flag = false;
                                }
                                else
                                {
                                    @Html.RouteLink("Начать прохождение", new {controller = "Test", action = "Index", id = list[j].Id},new { @class = "startButton"})
                                }
                            </div>
                        </div>@*questionTile*@
                    }
                }
            </div>
        }
    }
    </div>
</div>

@{
    string GetAnimation()
    {
        int delay = rnd.Next(2,7);
        return $"-webkit-animation: pulsing {delay}s infinite; animation: pulsing {delay}s infinite;";
    }

    string GetColor(int number)
    {
        foreach (var item in ViewBag.completedTestsDto) {
            if (list[number].Id == item.TestId && item.UserId == ViewBag.ActiveUser.Id)
            {
                var col = rnd.Next(70, 100);
                flag = true;
                return $"rgb({col},{128},{col})";
            }
        }
        color = rnd.Next(130, 200); 
        return $"rgb({MathF.Round((color-50)/2)},{color-50},{color})";
    }
}
